export const ADMIN_EXPORT_FILES_POST_SCHEMA = {
  type: "object",
  properties: {
    type: {
      description:
        "Cần các quyền với codename export_invoice_quantity, export_transaction, export_customer_debt_record, export_partner_debt_record",
      required: true,
      type: "string",
      enum: ["Invoice_quantity", "Transaction", "Debt_record", "Partner_debt_record"],
    },
    file_ext: {
      description:
        "\n- .csv chỉ xuất được Hóa đơn/Giao dịch\n- .xlsx chỉ xuất được Hóa đơn/Giao dịch/Công nợ khách hàng/Công nợ nhà cung cấp\n",
      required: true,
      type: "string",
      enum: [".csv", ".xlsx"],
    },
    field_options: {
      required: false,
      type: "array",
      items: {
        type: "string",
        enum: [
          "Order_sid",
          "Order_status",
          "Order_channel_name",
          "Order_shipping_method_name",
          "Order_customer_notes",
          "Order_owner_name",
          "Order_owner_phone_number",
          "Order_owner_email",
          "Invoice_sid",
          "Invoice_date_created",
          "Invoice_status",
          "Order_receiver_name",
          "Order_receiver_phone_number",
          "Order_receiver_email",
          "Shipping_address_address",
          "Billing_address_address",
          "Invoice_quantity_amount_before_discounts",
          "Invoice_quantity_amount_before_discounts_incl_tax",
          "Invoice_amount_before_discounts",
          "Invoice_amount_before_discounts_incl_tax",
          "Invoice_discount_amount",
          "Invoice_discount_amount_incl_tax",
          "Invoice_surcharge",
          "Invoice_shipping_incl_tax",
          "Invoice_shipping_excl_tax",
          "Invoice_cod",
          "Invoice_shipping_status",
          "Invoice_shipping_name",
          "Invoice_owner_name",
          "Invoice_owner_phone_number",
          "Invoice_owner_email",
          "Line_variant_sku",
          "Variant_editable_sku",
          "Line_variant_name",
          "Line_variant_unit",
          "Invoice_quantity_unit_quantity",
          "Line_variant_unit_price_excl_tax",
          "Line_variant_unit_price_incl_tax",
          "Invoice_quantity_amount",
          "Invoice_quantity_amount_incl_tax",
          "Line_variant_unit_weight",
          "Invoice_quantity_weight",
          "Invoice_quantity_warehouse_name",
          "Line_variant_unit_price_before_discounts_excl_tax",
          "Line_variant_unit_price_before_discounts_incl_tax",
          "Invoice_amount",
          "Invoice_amount_incl_tax",
          "Invoice_base_amount",
          "Invoice_base_amount_incl_tax",
          "Invoice_merge_profit_amount",
          "Invoice_merge_profit_amount_incl_tax",
          "Transaction_sid",
          "Transaction_owner_name",
          "Transaction_owner_email",
          "Transaction_owner_phone_number",
          "Transaction_status",
          "Transaction_notes",
          "Transaction_address",
          "Transaction_date_created",
          "Transaction_directed_amount",
          "Transaction_target_name",
          "Transaction_payment_method_name",
          "Transaction_affect_creditor",
          "Type_name",
          "Source_sid",
        ],
      },
      collectionFormat: "multi",
    },
    date_start: {
      required: false,
      type: "string",
      format: "date-time",
      default: "2024-02-25T11:33:24.538783+07:00",
    },
    date_end: {
      required: false,
      type: "string",
      format: "date-time",
      default: "2024-02-26T11:33:24.539320+07:00",
    },
    customer: { required: false, type: "string", nullable: true },
    partner: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const CHANGE_PASSWORD_POST_SCHEMA = {
  type: "object",
  properties: {
    password: { required: true, type: "string", maxLength: 128, minLength: 8 },
    confirm_password: { required: true, type: "string", minLength: 1 },
  },
  additionalProperties: false,
};
export const LOGIN_POST_SCHEMA = {
  type: "object",
  properties: {
    username: { required: true, type: "string", maxLength: 255, minLength: 1 },
    password: { required: true, type: "string", maxLength: 128, minLength: 1 },
  },
  additionalProperties: false,
};
export const REFRESH_TOKEN_POST_SCHEMA = {
  type: "object",
  properties: {
    refresh_token: { required: true, type: "string", minLength: 1 },
    csrf_token: { required: true, type: "string", minLength: 1 },
  },
  additionalProperties: false,
};
export const VERIFY_TOKEN_POST_SCHEMA = {
  type: "object",
  properties: { token: { required: true, type: "string", minLength: 1 } },
  additionalProperties: false,
};
export const ADMIN_CASH_PAYMENT_METHODS_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    description: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_CASH_TRANSACTIONS_POST_SCHEMA = {
  type: "object",
  properties: {
    status: {
      required: false,
      type: "string",
      enum: ["Draft", "Confirmed"],
      default: "Draft",
    },
    source_type: {
      required: false,
      type: "string",
      enum: ["order.invoice", "stock.stockoutnote", "stock.receiptorder"],
      nullable: true,
    },
    target_type: {
      required: false,
      type: "string",
      enum: ["partner.partner", "customer.customer"],
      nullable: true,
    },
    flow_type: { required: false, type: "string", enum: ["Cash_out", "Cash_in"] },
    notes: { required: false, type: "string" },
    address: { required: false, type: "string" },
    amount: { required: true, type: "string", format: "decimal" },
    source_id: {
      required: false,
      type: "integer",
      maximum: 9223372036854776000,
      minimum: 0,
      nullable: true,
    },
    target_id: {
      required: false,
      type: "integer",
      maximum: 9223372036854776000,
      minimum: 0,
      nullable: true,
    },
    target_name: { required: false, type: "string", maxLength: 255 },
    affect_creditor: { required: false, type: "boolean" },
    type: { required: true, type: "integer" },
    payment_method: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_CASH_TRANSACTIONS_TYPES_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 100, minLength: 1 },
    is_business_activity: { required: false, type: "boolean" },
    description: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_CUSTOMERS_DRAFTS_POST_SCHEMA = {
  type: "object",
  properties: {
    avatar: { required: false, type: "file", nullable: true },
    email: {
      required: false,
      type: "string",
      format: "email",
      maxLength: 254,
      nullable: true,
    },
    main_phone_number: {
      required: false,
      type: "string",
      maxLength: 128,
      nullable: true,
    },
    first_name: { required: false, type: "string", maxLength: 128 },
    last_name: { required: false, type: "string", maxLength: 128 },
    note: { required: false, type: "string" },
    birthday: { required: false, type: "string", format: "date-time", nullable: true },
    gender: { required: false, type: "string", enum: ["Male", "Female", "Other"] },
    facebook: { required: false, type: "string", format: "uri", maxLength: 200 },
    tax_identification_number: {
      required: false,
      type: "string",
      maxLength: 20,
      nullable: true,
    },
    company_name: { required: false, type: "string", maxLength: 255 },
    in_business: { required: false, type: "boolean" },
    type: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_CUSTOMERS_DRAFTS_ADDRESSES_POST_SCHEMA = {
  type: "object",
  properties: {
    line1: {
      title: "Line1",
      type: "string",
      maxLength: 255,
      minLength: 1,
      required: true,
    },
    line2: { title: "Line2", type: "string", maxLength: 255 },
    district: { title: "District", type: "string", maxLength: 255 },
    ward: { title: "Ward", type: "string", maxLength: 255 },
    province: { title: "Province", type: "string", maxLength: 255 },
    postcode: { title: "Postcode", type: "string", maxLength: 64 },
    phone_number: { title: "Phone number", type: "string", maxLength: 128 },
    notes: { title: "Notes", type: "string" },
    is_default_for_shipping: { title: "Is default for shipping", type: "boolean" },
    is_default_for_shipping_ecom: {
      title: "Is default for shipping ecom",
      type: "boolean",
    },
    is_default_for_billing: { title: "Is default for billing", type: "boolean" },
    country: {
      title: "Country",
      type: "string",
      enum: [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "CV",
        "KH",
        "CM",
        "CA",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "SZ",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "KP",
        "MK",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "KR",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "UM",
        "US",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW",
      ],
    },
    user: { title: "User", type: "integer", required: true },
    coordinates: {
      latitude: { title: "Latitude", type: "number", required: true },
      longitude: { title: "Longitude", type: "number", required: true },
      type: "object",
      nullable: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_CUSTOMERS_DRAFTS_WITH_ID_APPLY_POST_SCHEMA = {
  type: "object",
  properties: { token: { required: true, type: "string", minLength: 1 } },
  additionalProperties: false,
};
export const ADMIN_CUSTOMERS_DRAFTS_WITH_ID_REFUSE_POST_SCHEMA = {
  type: "object",
  properties: { token: { required: true, type: "string", minLength: 1 } },
  additionalProperties: false,
};
export const ADMIN_CUSTOMERS_TYPES_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    description: { required: false, type: "string" },
    parent: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_DISCOUNTS_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    date_start: { required: false, type: "string", format: "date-time" },
    date_end: { required: false, type: "string", format: "date-time", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_DISCOUNTS_DISCOUNTED_VARIANTS_POST_SCHEMA = {
  type: "object",
  properties: {
    discount_type: { required: false, type: "string", enum: ["Percentage", "Absolute"] },
    discount_amount: { required: false, type: "string", format: "decimal" },
    usage_limit: {
      required: false,
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      nullable: true,
    },
    variant: { required: true, type: "integer" },
    sale: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_DISCOUNTS_DISCOUNTED_VARIANTS_CREATE_FROM_CATEGORY_POST_SCHEMA = {
  type: "object",
  properties: {
    category: { required: true, type: "integer" },
    discount_type: { required: true, type: "string", enum: ["Percentage", "Absolute"] },
    discount_amount: { required: true, type: "string", format: "decimal" },
    usage_limit: { required: false, type: "integer", minimum: 0, nullable: true },
    sale: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_DISCOUNTS_VOUCHERS_POST_SCHEMA = {
  type: "object",
  properties: {
    type: {
      required: false,
      type: "string",
      enum: ["Entire_order", "Specific_product_variant"],
    },
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    code: { required: true, type: "string", maxLength: 255, minLength: 1 },
    description: { required: false, type: "string" },
    usage_limit: {
      required: false,
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      nullable: true,
    },
    date_start: { required: false, type: "string", format: "date-time" },
    date_end: { required: false, type: "string", format: "date-time", nullable: true },
    apply_once_per_order: { required: false, type: "boolean" },
    apply_once_per_customer: { required: false, type: "boolean" },
    standalone: { required: false, type: "boolean" },
    discount_type: { required: false, type: "string", enum: ["Percentage", "Absolute"] },
    discount_amount: { required: false, type: "string", format: "decimal" },
    min_spent_amount: { required: false, type: "string", format: "decimal" },
    min_checkout_items_quantity: {
      required: false,
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
    },
    max_discount_amount: {
      required: false,
      type: "string",
      format: "decimal",
      nullable: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_DISCOUNTS_VOUCHERS_DISCOUNTED_VARIANTS_POST_SCHEMA = {
  type: "object",
  properties: {
    variant: { required: true, type: "integer" },
    voucher: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_ISSUES_POST_SCHEMA = {
  type: "object",
  properties: {
    title: { required: true, type: "string", maxLength: 255, minLength: 1 },
    description: { required: true, type: "string", minLength: 1 },
    parent: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_ISSUES_RELATED_ITEMS_POST_SCHEMA = {
  type: "object",
  properties: {
    content_type: {
      required: true,
      type: "string",
      enum: ["account.user", "order.invoice", "stock.receiptorder", "customer.customer"],
    },
    object_id: { required: true, type: "integer" },
    extra: { required: false, type: "string" },
    issue: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_POST_SCHEMA = {
  type: "object",
  properties: {
    receiver: { required: false, type: "integer", nullable: true },
    receiver_name: { required: false, type: "string", maxLength: 256 },
    receiver_email: { required: false, type: "string", format: "email", maxLength: 254 },
    receiver_phone_number: {
      required: false,
      type: "string",
      maxLength: 128,
      nullable: true,
    },
    status: { required: false, type: "string", enum: ["Draft"], default: "Draft" },
    customer_notes: { required: false, type: "string" },
    channel: { required: false, type: "integer", nullable: true },
    shipping_method: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_BILLING_ADDRESSES_POST_SCHEMA = {
  type: "object",
  properties: {
    order: { required: true, type: "integer" },
    line1: { required: true, type: "string", maxLength: 255, minLength: 1 },
    line2: { required: false, type: "string", maxLength: 255 },
    ward: { required: false, type: "string", maxLength: 255 },
    district: { required: false, type: "string", maxLength: 255 },
    province: { required: false, type: "string", maxLength: 255 },
    country: {
      required: false,
      type: "string",
      enum: [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "CV",
        "KH",
        "CM",
        "CA",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "SZ",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "KP",
        "MK",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "KR",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "UM",
        "US",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW",
      ],
    },
    postcode: { required: false, type: "string", maxLength: 64 },
    phone_number: { required: false, type: "string", maxLength: 128 },
    notes: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_INVOICES_POST_SCHEMA = {
  type: "object",
  properties: {
    order: { required: true, type: "integer" },
    status: { required: false, type: "string", enum: ["Draft"], default: "Draft" },
    shipping_status: {
      required: false,
      type: "string",
      enum: ["Pending"],
      default: "Pending",
    },
    cod: { required: false, type: "boolean" },
    shipping_incl_tax: { required: false, type: "string", format: "decimal" },
    shipping_excl_tax: { required: false, type: "string", format: "decimal" },
    surcharge: { required: false, type: "string", format: "decimal" },
    shipper: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_INVOICES_QUANTITIES_POST_SCHEMA = {
  type: "object",
  properties: {
    line: { required: true, type: "integer" },
    invoice: { required: true, type: "integer" },
    unit_quantity: { required: true, type: "integer", maximum: 2147483647, minimum: 1 },
    record: { required: false, type: "integer", nullable: true },
    warehouse: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_INVOICES_RETURN_INVOICES_POST_SCHEMA = {
  type: "object",
  properties: {
    surcharge: { required: false, type: "string", format: "decimal" },
    notes: { required: false, type: "string" },
    is_confirmed: { required: false, type: "boolean" },
    invoice: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_INVOICES_RETURN_INVOICES_QUANTITIES_POST_SCHEMA = {
  type: "object",
  properties: {
    quantity: { required: false, type: "integer", maximum: 2147483647, minimum: 1 },
    return_invoice: { required: true, type: "integer" },
    invoice_quantity: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_LINES_POST_SCHEMA = {
  type: "object",
  properties: {
    unit: { required: false, type: "string", maxLength: 128 },
    unit_quantity: { required: true, type: "integer", maximum: 2147483647, minimum: 1 },
    discount_type: { required: false, type: "string", enum: ["Percentage", "Absolute"] },
    discount_amount: { required: false, type: "string", format: "decimal" },
    order: { required: true, type: "integer" },
    variant: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_PRICE_RULES_POST_SCHEMA = {
  type: "object",
  properties: {
    source_type: {
      required: true,
      type: "string",
      enum: ["discount.voucher", "price_table.pricetable"],
    },
    source_id: {
      required: true,
      type: "integer",
      maximum: 9223372036854776000,
      minimum: 0,
    },
    order: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_PURCHASE_CHANNELS_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    description: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_SHIPPERS_POST_SCHEMA = {
  type: "object",
  properties: {
    user: { required: false, type: "integer", nullable: true },
    name: { required: true, type: "string", maxLength: 128, minLength: 1 },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_SHIPPING_ADDRESSES_POST_SCHEMA = {
  type: "object",
  properties: {
    order: { required: true, type: "integer" },
    line1: { required: true, type: "string", maxLength: 255, minLength: 1 },
    line2: { required: false, type: "string", maxLength: 255 },
    ward: { required: false, type: "string", maxLength: 255 },
    district: { required: false, type: "string", maxLength: 255 },
    province: { required: false, type: "string", maxLength: 255 },
    country: {
      required: false,
      type: "string",
      enum: [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "CV",
        "KH",
        "CM",
        "CA",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "SZ",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "KP",
        "MK",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "KR",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "UM",
        "US",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW",
      ],
    },
    postcode: { required: false, type: "string", maxLength: 64 },
    phone_number: { required: false, type: "string", maxLength: 128 },
    notes: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_ORDERS_SHIPPING_METHODS_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 128, minLength: 1 },
    type: { required: true, type: "string", enum: ["Price", "Weight"] },
    price: { required: false, type: "string", format: "decimal" },
    price_incl_tax: { required: false, type: "string", format: "decimal" },
    minimum_order_price: { required: false, type: "string", format: "decimal" },
    maximum_order_price: {
      required: false,
      type: "string",
      format: "decimal",
      nullable: true,
    },
    minimum_order_weight: { required: false, type: "number", minimum: 0 },
    maximum_order_weight: { required: false, type: "number", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_PARTNERS_POST_SCHEMA = {
  type: "object",
  properties: {
    max_debt: { required: false, type: "string", format: "decimal" },
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    tax_identification_number: {
      required: false,
      type: "string",
      maxLength: 20,
      nullable: true,
    },
    notes: { required: false, type: "string" },
    email: { required: false, type: "string", format: "email", maxLength: 254 },
    contact_info: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_PARTNERS_ADDRESSES_POST_SCHEMA = {
  type: "object",
  properties: {
    phone_number: { required: false, type: "string", maxLength: 128 },
    line1: { required: true, type: "string", maxLength: 255, minLength: 1 },
    line2: { required: false, type: "string", maxLength: 255 },
    district: { required: false, type: "string", maxLength: 255 },
    ward: { required: false, type: "string", maxLength: 255 },
    province: { required: false, type: "string", maxLength: 255 },
    postcode: { required: false, type: "string", maxLength: 64 },
    country: {
      required: false,
      type: "string",
      enum: [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "CV",
        "KH",
        "CM",
        "CA",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "SZ",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "KP",
        "MK",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "KR",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "UM",
        "US",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW",
      ],
    },
    partner: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PARTNERS_ITEMS_POST_SCHEMA = {
  type: "object",
  properties: {
    partner_sku: { required: true, type: "string", maxLength: 255, minLength: 1 },
    price: { required: false, type: "string", format: "decimal" },
    price_incl_tax: { required: false, type: "string", format: "decimal" },
    partner: { required: true, type: "integer" },
    variant: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRICE_TABLES_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    active: { required: false, type: "boolean" },
    date_start: { required: false, type: "string", format: "date-time" },
    date_end: { required: false, type: "string", format: "date-time", nullable: true },
    id: { title: "ID", type: "integer", readOnly: true },
    date_created: {
      title: "Date created",
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    date_updated: {
      title: "Date updated",
      type: "string",
      format: "date-time",
      readOnly: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_PRICE_TABLES_USAGE_LIMIT_ITEM_POST_SCHEMA = {
  type: "object",
  properties: {
    content_type: {
      required: true,
      type: "string",
      enum: ["account.user", "customer.customer"],
    },
    object_id: {
      required: true,
      type: "integer",
      maximum: 9223372036854776000,
      minimum: 0,
      nullable: true,
    },
    table: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRICE_TABLES_VARIANTS_POST_SCHEMA = {
  type: "object",
  properties: {
    change_type: {
      required: true,
      type: "string",
      enum: [
        "discount_percentage",
        "discount_absolute",
        "fixed_price",
        "increase_percentage",
        "increase_absolute",
      ],
    },
    change_amount: { required: false, type: "string", format: "decimal" },
    table: { required: true, type: "integer" },
    variant: { required: true, type: "integer" },
    unit: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_PRICE_TABLES_VARIANTS_BULK_UPSERT_POST_SCHEMA = {
  type: "object",
  properties: {
    table: { required: true, type: "integer" },
    change_type: {
      required: true,
      type: "string",
      enum: [
        "discount_percentage",
        "discount_absolute",
        "fixed_price",
        "increase_percentage",
        "increase_absolute",
      ],
    },
    change_amount: { required: true, type: "string", format: "decimal" },
    limit_to_variants: {
      required: false,
      type: "array",
      items: { type: "integer" },
      uniqueItems: true,
    },
    limit_to_categories: {
      required: false,
      type: "array",
      items: { type: "integer" },
      uniqueItems: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_POST_SCHEMA = {
  type: "object",
  properties: {
    product_class: { required: true, type: "integer" },
    publication_date: { required: false, type: "string", format: "date-time" },
    is_published: { required: false, type: "boolean" },
    meta_title: { required: false, type: "string", maxLength: 255 },
    meta_description: { required: false, type: "string" },
    seo_title: { required: false, type: "string", maxLength: 70 },
    seo_description: { required: false, type: "string", maxLength: 300 },
    name: { required: true, type: "string", maxLength: 250, minLength: 1 },
    description: { required: false, type: "string" },
    available_for_purchase: {
      required: false,
      type: "string",
      format: "date-time",
      nullable: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_ATTRIBUTES_POST_SCHEMA = {
  type: "object",
  properties: {
    input_type: { required: true, type: "string", enum: ["Option", "Multi_option"] },
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    is_variant_only: { required: false, type: "boolean" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_ATTRIBUTES_OPTIONS_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 250, minLength: 1 },
    value: { required: true, type: "string", maxLength: 100, minLength: 1 },
    attribute: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_CATEGORIES_POST_SCHEMA = {
  type: "object",
  properties: {
    parent: { required: false, type: "integer", nullable: true },
    name: { required: true, type: "string", maxLength: 250, minLength: 1 },
    description: { required: false, type: "string" },
    image: { required: false, type: "file", nullable: true },
    image_alt: { required: false, type: "string", maxLength: 128 },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_IMAGES_POST_SCHEMA = {
  type: "object",
  properties: {
    image: { required: true, type: "file" },
    sort_order: {
      required: false,
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      nullable: true,
    },
    alt: { required: false, type: "string", maxLength: 128 },
    product: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_PRODUCT_CATEGORIES_POST_SCHEMA = {
  type: "object",
  properties: {
    category: { required: true, type: "integer" },
    product: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_RECOMMENDATIONS_POST_SCHEMA = {
  type: "object",
  properties: {
    ranking: {
      description:
        "Determines order of the products. A product with a higher value will appear before one with a lower ranking.",
      required: false,
      type: "integer",
      maximum: 32767,
      minimum: 0,
    },
    primary: { required: true, type: "integer" },
    recommendation: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_TYPES_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 250, minLength: 1 },
    tax_rate: { required: false, type: "string", format: "decimal" },
    has_variants: { required: false, type: "boolean" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_TYPES_PRODUCT_ATTRIBUTES_POST_SCHEMA = {
  type: "object",
  properties: {
    attribute: { required: true, type: "integer" },
    product_class: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_TYPES_VARIANT_ATTRIBUTES_POST_SCHEMA = {
  type: "object",
  properties: {
    attribute: { required: true, type: "integer" },
    product_class: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_VARIANTS_POST_SCHEMA = {
  type: "object",
  properties: {
    is_default: { required: false, type: "boolean" },
    product: { required: true, type: "integer" },
    editable_sku: { required: false, type: "string", maxLength: 255, minLength: 1 },
    unit: { required: true, type: "string", maxLength: 100, minLength: 1 },
    weight: { required: false, type: "number", minimum: 0 },
    bar_code: { required: false, type: "string", maxLength: 100 },
    name: { required: false, type: "string", maxLength: 255 },
    track_inventory: { required: false, type: "boolean" },
    price: { required: false, type: "string", format: "decimal" },
    price_incl_tax: { required: false, type: "string", format: "decimal" },
    list_id_values: { required: false, type: "string", default: "", minLength: 1 },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_VARIANTS_IMAGES_POST_SCHEMA = {
  type: "object",
  properties: {
    variant: { required: true, type: "integer" },
    image: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PRODUCTS_VARIANTS_UNITS_POST_SCHEMA = {
  type: "object",
  properties: {
    editable_sku: { required: false, type: "string", maxLength: 255, minLength: 1 },
    unit: { required: true, type: "string", maxLength: 100, minLength: 1 },
    multiply: { required: false, type: "integer", maximum: 2147483647, minimum: 1 },
    weight: { required: false, type: "number", minimum: 0 },
    bar_code: { required: false, type: "string", maxLength: 100 },
    price: { required: false, type: "string", format: "decimal" },
    price_incl_tax: { required: false, type: "string", format: "decimal" },
    is_published: { required: false, type: "boolean" },
    variant: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_PURCHASE_REQUESTS_POST_SCHEMA = {
  type: "object",
  properties: {
    variant: { required: false, type: "integer", nullable: true },
    quantity: { required: false, type: "integer", maximum: 2147483647, minimum: 1 },
    notes: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_TAG_GROUPS_POST_SCHEMA = {
  type: "object",
  properties: {
    source_type: {
      required: true,
      type: "string",
      enum: [
        "order.order",
        "order.invoice",
        "customer.customer",
        "partner.partner",
        "issue.issue",
        "stock.purchaserequest",
      ],
    },
    tags: { required: true, type: "array", items: { type: "string", minLength: 1 } },
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    id: { title: "ID", type: "integer", readOnly: true },
    date_created: {
      title: "Date created",
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    date_updated: {
      title: "Date updated",
      type: "string",
      format: "date-time",
      readOnly: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_TAG_GROUPS_TAGS_TAGGED_ITEMS_POST_SCHEMA = {
  type: "object",
  properties: {
    content_type: {
      required: true,
      type: "string",
      enum: [
        "order.order",
        "order.invoice",
        "customer.customer",
        "partner.partner",
        "issue.issue",
        "stock.purchaserequest",
      ],
    },
    tag_name: { required: false, type: "string", minLength: 1 },
    object_id: {
      required: true,
      type: "integer",
      maximum: 9223372036854776000,
      minimum: 0,
    },
    tag: { required: false, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_USERS_POST_SCHEMA = {
  type: "object",
  properties: {
    avatar: { required: false, type: "file", nullable: true },
    username: {
      required: false,
      type: "string",
      pattern: "^[\\w.+-]+$",
      maxLength: 255,
      nullable: true,
    },
    email: {
      required: false,
      type: "string",
      format: "email",
      maxLength: 254,
      nullable: true,
    },
    main_phone_number: {
      required: false,
      type: "string",
      maxLength: 128,
      nullable: true,
    },
    first_name: { required: false, type: "string", maxLength: 128 },
    last_name: { required: false, type: "string", maxLength: 128 },
    note: { required: false, type: "string" },
    birthday: { required: false, type: "string", format: "date-time", nullable: true },
    gender: { required: false, type: "string", enum: ["Male", "Female", "Other"] },
    facebook: { required: false, type: "string", format: "uri", maxLength: 200 },
    is_staff: { required: false, type: "boolean" },
    is_active: { required: false, type: "boolean" },
  },
  additionalProperties: false,
};
export const ADMIN_USERS_ADDRESSES_POST_SCHEMA = {
  type: "object",
  properties: {
    line1: {
      title: "Line1",
      type: "string",
      maxLength: 255,
      minLength: 1,
      required: true,
    },
    line2: { title: "Line2", type: "string", maxLength: 255 },
    district: { title: "District", type: "string", maxLength: 255 },
    ward: { title: "Ward", type: "string", maxLength: 255 },
    province: { title: "Province", type: "string", maxLength: 255 },
    postcode: { title: "Postcode", type: "string", maxLength: 64 },
    phone_number: { title: "Phone number", type: "string", maxLength: 128 },
    notes: { title: "Notes", type: "string" },
    is_default_for_shipping: { title: "Is default for shipping", type: "boolean" },
    is_default_for_billing: { title: "Is default for billing", type: "boolean" },
    country: {
      title: "Country",
      type: "string",
      enum: [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "CV",
        "KH",
        "CM",
        "CA",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "SZ",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "KP",
        "MK",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "KR",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "UM",
        "US",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW",
      ],
    },
    user: { title: "User", type: "integer", required: true },
    coordinates: {
      latitude: { title: "Latitude", type: "number", required: true },
      longitude: { title: "Longitude", type: "number", required: true },
      type: "object",
      nullable: true,
    },
  },
  additionalProperties: false,
};
export const ADMIN_USERS_PERMISSIONS_POST_SCHEMA = {
  type: "object",
  properties: {
    user: { required: true, type: "integer" },
    permission: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_USERS_WITH_ID_RESET_PASSWORD_POST_SCHEMA = {
  type: "object",
  properties: { token: { required: true, type: "string", minLength: 1 } },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_POST_SCHEMA = {
  type: "object",
  properties: {
    name: { required: true, type: "string", maxLength: 255, minLength: 1 },
    manager: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_ADDRESSES_POST_SCHEMA = {
  type: "object",
  properties: {
    line1: { required: true, type: "string", maxLength: 255, minLength: 1 },
    line2: { required: false, type: "string", maxLength: 255 },
    district: { required: false, type: "string", maxLength: 255 },
    ward: { required: false, type: "string", maxLength: 255 },
    province: { required: false, type: "string", maxLength: 255 },
    postcode: { required: false, type: "string", maxLength: 64 },
    country: {
      required: false,
      type: "string",
      enum: [
        "AF",
        "AX",
        "AL",
        "DZ",
        "AS",
        "AD",
        "AO",
        "AI",
        "AQ",
        "AG",
        "AR",
        "AM",
        "AW",
        "AU",
        "AT",
        "AZ",
        "BS",
        "BH",
        "BD",
        "BB",
        "BY",
        "BE",
        "BZ",
        "BJ",
        "BM",
        "BT",
        "BO",
        "BQ",
        "BA",
        "BW",
        "BV",
        "BR",
        "IO",
        "BN",
        "BG",
        "BF",
        "BI",
        "CV",
        "KH",
        "CM",
        "CA",
        "KY",
        "CF",
        "TD",
        "CL",
        "CN",
        "CX",
        "CC",
        "CO",
        "KM",
        "CG",
        "CD",
        "CK",
        "CR",
        "CI",
        "HR",
        "CU",
        "CW",
        "CY",
        "CZ",
        "DK",
        "DJ",
        "DM",
        "DO",
        "EC",
        "EG",
        "SV",
        "GQ",
        "ER",
        "EE",
        "SZ",
        "ET",
        "FK",
        "FO",
        "FJ",
        "FI",
        "FR",
        "GF",
        "PF",
        "TF",
        "GA",
        "GM",
        "GE",
        "DE",
        "GH",
        "GI",
        "GR",
        "GL",
        "GD",
        "GP",
        "GU",
        "GT",
        "GG",
        "GN",
        "GW",
        "GY",
        "HT",
        "HM",
        "VA",
        "HN",
        "HK",
        "HU",
        "IS",
        "IN",
        "ID",
        "IR",
        "IQ",
        "IE",
        "IM",
        "IL",
        "IT",
        "JM",
        "JP",
        "JE",
        "JO",
        "KZ",
        "KE",
        "KI",
        "KW",
        "KG",
        "LA",
        "LV",
        "LB",
        "LS",
        "LR",
        "LY",
        "LI",
        "LT",
        "LU",
        "MO",
        "MG",
        "MW",
        "MY",
        "MV",
        "ML",
        "MT",
        "MH",
        "MQ",
        "MR",
        "MU",
        "YT",
        "MX",
        "FM",
        "MD",
        "MC",
        "MN",
        "ME",
        "MS",
        "MA",
        "MZ",
        "MM",
        "NA",
        "NR",
        "NP",
        "NL",
        "NC",
        "NZ",
        "NI",
        "NE",
        "NG",
        "NU",
        "NF",
        "KP",
        "MK",
        "MP",
        "NO",
        "OM",
        "PK",
        "PW",
        "PS",
        "PA",
        "PG",
        "PY",
        "PE",
        "PH",
        "PN",
        "PL",
        "PT",
        "PR",
        "QA",
        "RE",
        "RO",
        "RU",
        "RW",
        "BL",
        "SH",
        "KN",
        "LC",
        "MF",
        "PM",
        "VC",
        "WS",
        "SM",
        "ST",
        "SA",
        "SN",
        "RS",
        "SC",
        "SL",
        "SG",
        "SX",
        "SK",
        "SI",
        "SB",
        "SO",
        "ZA",
        "GS",
        "KR",
        "SS",
        "ES",
        "LK",
        "SD",
        "SR",
        "SJ",
        "SE",
        "CH",
        "SY",
        "TW",
        "TJ",
        "TZ",
        "TH",
        "TL",
        "TG",
        "TK",
        "TO",
        "TT",
        "TN",
        "TR",
        "TM",
        "TC",
        "TV",
        "UG",
        "UA",
        "AE",
        "GB",
        "UM",
        "US",
        "UY",
        "UZ",
        "VU",
        "VE",
        "VN",
        "VG",
        "VI",
        "WF",
        "EH",
        "YE",
        "ZM",
        "ZW",
      ],
    },
    warehouse: { required: true, type: "integer" },
    phone_number: { required: false, type: "string", maxLength: 128 },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_OUT_NOTES_POST_SCHEMA = {
  type: "object",
  properties: {
    status: {
      required: false,
      type: "string",
      enum: ["Draft", "Confirmed"],
      default: "Draft",
    },
    direction: { required: false, type: "string", enum: ["in", "out"] },
    reason: {
      required: false,
      type: "string",
      enum: [
        "customer_return",
        "partner_return",
        "ecommerce_return",
        "storage_miss_match",
        "product_expiration",
        "other",
      ],
    },
    shipping_incl_tax: { required: false, type: "string", format: "decimal" },
    shipping_excl_tax: { required: false, type: "string", format: "decimal" },
    amount: { required: false, type: "string", format: "decimal" },
    amount_incl_tax: { required: false, type: "string", format: "decimal" },
    notes: { required: false, type: "string" },
    warehouse: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_OUT_NOTES_LINES_POST_SCHEMA = {
  type: "object",
  properties: {
    unit: { required: false, type: "string", minLength: 1, nullable: true },
    variant: { required: false, type: "integer", nullable: true },
    record: { required: false, type: "integer", nullable: true },
    stock_out_note: { required: true, type: "integer" },
    unit_quantity: { required: true, type: "integer", maximum: 2147483647, minimum: 1 },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_PURCHASE_ORDERS_POST_SCHEMA = {
  type: "object",
  properties: {
    status: { required: false, type: "string", enum: ["Draft"], default: "Draft" },
    notes: { required: false, type: "string" },
    warehouse: { required: true, type: "integer" },
    partner: { required: true, type: "integer" },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_PURCHASE_ORDERS_LINES_POST_SCHEMA = {
  type: "object",
  properties: {
    discount_type: { required: false, type: "string", enum: ["Percentage", "Absolute"] },
    discount_amount: { required: false, type: "string", format: "decimal" },
    order: { required: true, type: "integer" },
    quantity: { required: false, type: "integer", maximum: 2147483647, minimum: 1 },
    offer_description: { required: false, type: "string" },
    variant: { required: false, type: "integer", nullable: true },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_PURCHASE_ORDERS_RECEIPT_ORDERS_POST_SCHEMA = {
  type: "object",
  properties: {
    order: { required: true, type: "integer" },
    status: { required: false, type: "string", enum: ["Draft"], default: "Draft" },
    surcharge: { required: false, type: "string", format: "decimal" },
    notes: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_PURCHASE_ORDERS_RECEIPT_ORDERS_QUANTITIES_POST_SCHEMA = {
  type: "object",
  properties: {
    order: { required: true, type: "integer" },
    line: { required: true, type: "integer" },
    expiration_date: { required: false, type: "string", format: "date-time" },
    notes: { required: false, type: "string" },
    quantity: { required: true, type: "integer", maximum: 2147483647, minimum: 1 },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_PURCHASE_ORDERS_RECEIPT_ORDERS_RETURN_ORDERS_POST_SCHEMA = {
  type: "object",
  properties: {
    order: { required: true, type: "integer" },
    status: { required: false, type: "string", enum: ["Draft"], default: "Draft" },
    surcharge: { required: false, type: "string", format: "decimal" },
    notes: { required: false, type: "string" },
  },
  additionalProperties: false,
};
export const ADMIN_WAREHOUSES_PURCHASE_ORDERS_RECEIPT_ORDERS_RETURN_ORDERS_QUANTITIES_POST_SCHEMA =
  {
    type: "object",
    properties: {
      order: { required: true, type: "integer" },
      receipt_order_quantity: { required: true, type: "integer" },
      quantity: { required: true, type: "integer", maximum: 2147483647, minimum: 1 },
    },
    additionalProperties: false,
  };
